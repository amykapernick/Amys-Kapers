---
import Layout from "@layouts/default";
import {
	rating
} from "@data/forms/talkFeedback";
import RangeField from "@parts/rangeField";
import parseTalks from "@utils/parseTalks";

const { talks } = await fetch(import.meta.env.NOTIST_FEED)
	.then((res) => res.json())
	.then((res) => parseTalks(res?.data?.[0]?.relationships?.data))
	.catch((err) => {
		console.log({ type: "fetch_talks", err });

		return {};
	});

const content = {
	title: "Talk Feedback | Amy Kapernick",
	description: "A few questions about the presentation",
};
---
<style>
	@import '@mixins';

	article {
		@include content;
	}

	@media(min-width: 60em) {
		article {
			& h1 {
				text-decoration: none;
				font-size: 2em;
			}
		}
	}
</style>


<Layout content={content} header="reduced">
	<article>
		<h1>Talk Feedback</h1>
		<form
			id="workshop-prep"
			action={`${import.meta.env.API_URL}/talk-feedback`}
			method="post"
		>
			<input
				type="hidden"
				name="redirect"
				value={`${Astro.url.origin}/talks/thanks`}
			/>
			<input type="hidden" name="page" value={Astro.url.pathname} />
			<input type="hidden" name="function" value="talk-feedback" />
			<input
				type="hidden"
				name="notion_page"
				value={import.meta.env.PAGE_TALK_FEEDBACK}
			/>

			<label for="title">Talk</label>
			<input 
				id="title"
				type="text" 
				name="talk" 
				list="talks"
				required
			/>
			<datalist id="talks">
				{Object.values(talks).map((talk) => (
					<>
						{talk?.title && <option value={talk.title} />}
					</>
				))}
			</datalist>

			<label for="event">Event</label>
			<input 
				type="text" 
				name="name" 
				id="event"
				required
			/>

			<RangeField
				label="How would you rate the talk?"
				name="rating"
				options={rating.opts}
				min={rating.min}
				max={rating.max}
			/>
			<label for="feedback"
				>Anything you really enjoyed or would have liked to know more
				about?</label
			>
			<textarea id="feedback" name="feedback"></textarea>

			<label for="comments">Any other comments or feedback?</label>
			<textarea id="comments" name="comments"></textarea>
			<button type="submit">Submit</button>
		</form>
	</article>
</Layout>

<script is:inline>
	window.addEventListener('DOMContentLoaded', () => {
	  const urlParams = new URLSearchParams(window.location.search);
	  const title = document.querySelector('#title') || {}
	  const event = document.querySelector('#event') || {}

	  title.value = urlParams?.get('talk') || '';
	  event.value = urlParams?.get('event') || '';
	});
</script>