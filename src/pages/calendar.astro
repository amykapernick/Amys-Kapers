---
import calendarYears from "../utils/calendar/years";
import Layout from "../layouts/calendar.astro";
import parseEvents from "../utils/calendar/parseEvents";
import parseTravel from "../utils/calendar/parseTravel";

const content = {
	title: "Calendar - Year in a View",
};

let url = `${import.meta.env.API_URL}`;

if (!url.includes("http")) {
	url = `${import.meta.env.SITE_URL}${url}`;
}

const events = await fetch(`${url}/events?filter=all`)
	.then((res) => {
		console.log({ res });
		return res.json();
	})
	.catch((err) => {
		console.log({ fetch: "calendar_events", err });

		return [];
	});
const travel = await fetch(`${url}/travel?filter=all`)
	.then((res) => {
		console.log({ res });
		return res.json();
	})
	.catch((err) => {
		console.log({ fetch: "calendar_travel", err });

		return [];
	});

const calendarDates = calendarYears(events);
const calendarEvents = parseEvents(events);
const calendarTrips = parseTravel(travel);
---

<Layout content={content}>
	<div class="calendar">
		<h1>Calendar</h1>
		{
			Object.entries(calendarDates).map(([year, days]) => (
				<div class={`year y-${year}`}>
					<h2>{year}</h2>
					<div class="dates">
						{days.map((day) => (
							<div
								data-monthName={day.monthName}
								data-day={day.day}
								style={{
									"--month": day.month,
									"--offset": day.offset,
								}}
								class="date"
							>
								<p>{day.date}</p>
							</div>
						))}
						{calendarEvents
							.filter((event) => event.year == year)
							.map((event) => (
								<div
									class="event"
									data-status={event.status}
									style={{
										"--offset": event.offset,
										"--length": event.length,
										"--row": event.row,
										"--icon": event.icon,
									}}
								>
									{event.icon} {event.name}
								</div>
							))}
						{calendarTrips
							.filter((trip) => trip.year == year)
							.map((trip) => (
								<div
									class="trip"
									data-status={trip.status}
									style={{
										"--offset": trip.offset,
										"--length": trip.length,
										"--row": trip.row,
										"--icon": trip.icon,
									}}
								>
									{trip.city}, {trip.country}
								</div>
							))}
					</div>
				</div>
			))
		}
	</div>
</Layout>
