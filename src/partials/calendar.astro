---
const { dates = [], anonymous = false } = Astro.props

const workingHours = 15
---

<style>
	h2 {
		margin-top: 0;
		color: #85caf6;
		text-align: center;
	}

	p {
		margin: 5px 5px 5px 0;
		color: #36454f;
		font-size: 1.17em;
		font-weight: 700;
		text-transform: uppercase;
	}

	.year {
		display: grid;
		position: relative;
		z-index: 2;
		grid-template-rows: auto 1fr;
		min-width: 1800px;
		min-height: 100vh;
		padding: 10px 50px 10px 20px;
	}

	.dates {
		display: grid;
		position: relative;
		grid-column-gap: 5px;
		grid-template-columns: repeat(auto-fill, minmax(42px, 1fr));
		grid-template-rows: repeat(12, auto minmax(1em, 1fr) minmax(1em, 1fr) minmax(1em, 1fr) 5px);
		border-top: 1px solid #85caf6;
	}

	.date {
		display: flex;
		flex-direction: column;
		align-items: flex-end;
		justify-content: flex-start;
		padding: 0;

		&[data-month="1"] {
			&:before {
				content: attr(data-day);
				position: absolute;
				top: -1.3em;
				color: #eef1f6;
				font-size: 0.8em;
				font-weight: 600;
			}
		}
	}

	.month {
		position: absolute;
		z-index: -1;
		transform: translateY(-15px) translateX(50px);
		color: #ca8ef6;
		font-size: 3em;
		font-weight: bold;
		grid-column: var(--offset);
		grid-row: var(--row);
	}

	.date, .events {
		--background: rgba(133, 202, 246, 0.8);

		grid-column: var(--offset);
		grid-row: var(--row);
		position: relative;

		&[data-day='Sat'],
		&[data-day='Sun'] {
			--background: #85caf6;
		}

		&::after {
			background: var(--background);
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			content: '';
			z-index: -1;
		}
	}

	.events {
		list-style: none;
		margin: 0;
		padding: 0;
		max-width: 100%;
		display: grid;
	}

	.event {
		--colour: $green;
		--text: $neutral;

		margin: 0;
		padding: 0 7px;
		border: 2px solid var(--colour);
		color: var(--text);
		font-size: 0.5em;
		position: relative;
		z-index: 2;
		max-width: calc(100% + 5px);
		overflow: hidden;
		display: -webkit-box;
		-webkit-box-orient: vertical;
		line-clamp: 2;
		text-overflow: ellipsis;
		-webkit-line-clamp: 2;
		min-height: 1em;

		&::before {
			content: '';
			position: absolute;
			inset: 0;
			background: var(--colour);
			opacity: 0.7;
			z-index: -1;
		}

		&:not([data-start]) {
			margin-left: -2.5px;
			border-left: none;
		}

		&:not([data-end]) {
			margin-right: -2.5px;
			border-right: none;
		}

		&[data-end] {
			text-align: right;
			justify-content: end;
		}

		&:not([data-start], [data-end]) {
			color: transparent;
		}

		&[data-type="trip"] {
			--colour: $purple_bright;
		}

		&[data-type="project"] {
			--colour: $navy;
			--text: $white;
		}
	}
</style>

<>
{
	Object.entries(dates).map(([year, days]) => (
		<div class={`year y-${year}`}>
			<h2>{year}</h2>
			<div class="dates">
				{days.map((day) => (
					<>
						{day.date === 1 && 
							<p
								class="month"
								style={{
									"--row": (day.month * 5) - 3,
									"--offset": day.offset,
								}}
							>
								{day.monthName}	
							</p>
						}
						<div							data-day={day.day}
							style={{
								"--row": (day.month * 5) - 4,
								"--offset": day.offset,
							}}
							class="date"
						>
							<p>{day.date}</p>
							
						</div>
						{Object.entries({
							trip: day.trips, 
							event: day.events, 
							project: day.projects
						}).map(([type, entries], i) => (
							<ul
								class="events"
								style={{
									"--row": (day.month * 5) - 3 + i,
									"--offset": day.offset,
								}}
								data-day={day.day}
							>
								{entries.map((event) => (
									<li
										class="event"
										data-start={event.startDay}
										data-end={event.endDay}
										data-status={event.cfp || event.status}
										data-type={type}
									>
										{!anonymous && event.name}
									</li>
								))}	
							</ul>
						))}
					</>
				))}
			</div>
		</div>
	))
}
</>